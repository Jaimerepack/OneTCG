// Generated by view binder compiler. Do not edit!
package com.example.onetcg20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onetcg20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCardsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivCard;

  @NonNull
  public final TextView tvCardCounter;

  @NonNull
  public final TextView tvCardDesignation;

  @NonNull
  public final TextView tvCardName;

  @NonNull
  public final TextView tvCardPower;

  @NonNull
  public final TextView tvCardRarity;

  @NonNull
  public final TextView tvCardSerie;

  @NonNull
  public final TextView tvCardSet;

  @NonNull
  public final TextView tvCounter;

  @NonNull
  public final TextView tvDesignation;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvPower;

  @NonNull
  public final TextView tvRarity;

  @NonNull
  public final TextView tvSerie;

  @NonNull
  public final TextView tvSet;

  private ItemCardsBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivCard,
      @NonNull TextView tvCardCounter, @NonNull TextView tvCardDesignation,
      @NonNull TextView tvCardName, @NonNull TextView tvCardPower, @NonNull TextView tvCardRarity,
      @NonNull TextView tvCardSerie, @NonNull TextView tvCardSet, @NonNull TextView tvCounter,
      @NonNull TextView tvDesignation, @NonNull TextView tvName, @NonNull TextView tvPower,
      @NonNull TextView tvRarity, @NonNull TextView tvSerie, @NonNull TextView tvSet) {
    this.rootView = rootView;
    this.ivCard = ivCard;
    this.tvCardCounter = tvCardCounter;
    this.tvCardDesignation = tvCardDesignation;
    this.tvCardName = tvCardName;
    this.tvCardPower = tvCardPower;
    this.tvCardRarity = tvCardRarity;
    this.tvCardSerie = tvCardSerie;
    this.tvCardSet = tvCardSet;
    this.tvCounter = tvCounter;
    this.tvDesignation = tvDesignation;
    this.tvName = tvName;
    this.tvPower = tvPower;
    this.tvRarity = tvRarity;
    this.tvSerie = tvSerie;
    this.tvSet = tvSet;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCardsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCardsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cards, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCardsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.ivCard;
      ImageView ivCard = ViewBindings.findChildViewById(rootView, id);
      if (ivCard == null) {
        break missingId;
      }

      id = R.id.tvCardCounter;
      TextView tvCardCounter = ViewBindings.findChildViewById(rootView, id);
      if (tvCardCounter == null) {
        break missingId;
      }

      id = R.id.tvCardDesignation;
      TextView tvCardDesignation = ViewBindings.findChildViewById(rootView, id);
      if (tvCardDesignation == null) {
        break missingId;
      }

      id = R.id.tvCardName;
      TextView tvCardName = ViewBindings.findChildViewById(rootView, id);
      if (tvCardName == null) {
        break missingId;
      }

      id = R.id.tvCardPower;
      TextView tvCardPower = ViewBindings.findChildViewById(rootView, id);
      if (tvCardPower == null) {
        break missingId;
      }

      id = R.id.tvCardRarity;
      TextView tvCardRarity = ViewBindings.findChildViewById(rootView, id);
      if (tvCardRarity == null) {
        break missingId;
      }

      id = R.id.tvCardSerie;
      TextView tvCardSerie = ViewBindings.findChildViewById(rootView, id);
      if (tvCardSerie == null) {
        break missingId;
      }

      id = R.id.tvCardSet;
      TextView tvCardSet = ViewBindings.findChildViewById(rootView, id);
      if (tvCardSet == null) {
        break missingId;
      }

      id = R.id.tvCounter;
      TextView tvCounter = ViewBindings.findChildViewById(rootView, id);
      if (tvCounter == null) {
        break missingId;
      }

      id = R.id.tvDesignation;
      TextView tvDesignation = ViewBindings.findChildViewById(rootView, id);
      if (tvDesignation == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvPower;
      TextView tvPower = ViewBindings.findChildViewById(rootView, id);
      if (tvPower == null) {
        break missingId;
      }

      id = R.id.tvRarity;
      TextView tvRarity = ViewBindings.findChildViewById(rootView, id);
      if (tvRarity == null) {
        break missingId;
      }

      id = R.id.tvSerie;
      TextView tvSerie = ViewBindings.findChildViewById(rootView, id);
      if (tvSerie == null) {
        break missingId;
      }

      id = R.id.tvSet;
      TextView tvSet = ViewBindings.findChildViewById(rootView, id);
      if (tvSet == null) {
        break missingId;
      }

      return new ItemCardsBinding((ConstraintLayout) rootView, ivCard, tvCardCounter,
          tvCardDesignation, tvCardName, tvCardPower, tvCardRarity, tvCardSerie, tvCardSet,
          tvCounter, tvDesignation, tvName, tvPower, tvRarity, tvSerie, tvSet);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
