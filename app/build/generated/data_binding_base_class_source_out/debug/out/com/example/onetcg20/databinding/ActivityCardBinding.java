// Generated by view binder compiler. Do not edit!
package com.example.onetcg20.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.onetcg20.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityCardBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnAddCollector;

  @NonNull
  public final Button btnAddDeck;

  @NonNull
  public final Button btnRemoveCollector;

  @NonNull
  public final Button btnVolver;

  @NonNull
  public final ImageView ivCard;

  @NonNull
  public final LinearLayout main;

  @NonNull
  public final TextView tvAttribute;

  @NonNull
  public final TextView tvCardAttribute;

  @NonNull
  public final TextView tvCardColor;

  @NonNull
  public final TextView tvCardCounter;

  @NonNull
  public final TextView tvCardDesignation;

  @NonNull
  public final TextView tvCardEffect;

  @NonNull
  public final TextView tvCardId;

  @NonNull
  public final TextView tvCardLife;

  @NonNull
  public final TextView tvCardName;

  @NonNull
  public final TextView tvCardNotes;

  @NonNull
  public final TextView tvCardPower;

  @NonNull
  public final TextView tvCardQuantity;

  @NonNull
  public final TextView tvCardRarity;

  @NonNull
  public final TextView tvCardSet;

  @NonNull
  public final TextView tvCardTrigger;

  @NonNull
  public final TextView tvCardType;

  @NonNull
  public final TextView tvColor;

  @NonNull
  public final TextView tvCounter;

  @NonNull
  public final TextView tvDesignation;

  @NonNull
  public final TextView tvEffect;

  @NonNull
  public final TextView tvId;

  @NonNull
  public final TextView tvLife;

  @NonNull
  public final TextView tvName;

  @NonNull
  public final TextView tvNotes;

  @NonNull
  public final TextView tvPower;

  @NonNull
  public final TextView tvQuantity;

  @NonNull
  public final TextView tvRarity;

  @NonNull
  public final TextView tvSet;

  @NonNull
  public final TextView tvTrigger;

  @NonNull
  public final TextView tvType;

  private ActivityCardBinding(@NonNull LinearLayout rootView, @NonNull Button btnAddCollector,
      @NonNull Button btnAddDeck, @NonNull Button btnRemoveCollector, @NonNull Button btnVolver,
      @NonNull ImageView ivCard, @NonNull LinearLayout main, @NonNull TextView tvAttribute,
      @NonNull TextView tvCardAttribute, @NonNull TextView tvCardColor,
      @NonNull TextView tvCardCounter, @NonNull TextView tvCardDesignation,
      @NonNull TextView tvCardEffect, @NonNull TextView tvCardId, @NonNull TextView tvCardLife,
      @NonNull TextView tvCardName, @NonNull TextView tvCardNotes, @NonNull TextView tvCardPower,
      @NonNull TextView tvCardQuantity, @NonNull TextView tvCardRarity, @NonNull TextView tvCardSet,
      @NonNull TextView tvCardTrigger, @NonNull TextView tvCardType, @NonNull TextView tvColor,
      @NonNull TextView tvCounter, @NonNull TextView tvDesignation, @NonNull TextView tvEffect,
      @NonNull TextView tvId, @NonNull TextView tvLife, @NonNull TextView tvName,
      @NonNull TextView tvNotes, @NonNull TextView tvPower, @NonNull TextView tvQuantity,
      @NonNull TextView tvRarity, @NonNull TextView tvSet, @NonNull TextView tvTrigger,
      @NonNull TextView tvType) {
    this.rootView = rootView;
    this.btnAddCollector = btnAddCollector;
    this.btnAddDeck = btnAddDeck;
    this.btnRemoveCollector = btnRemoveCollector;
    this.btnVolver = btnVolver;
    this.ivCard = ivCard;
    this.main = main;
    this.tvAttribute = tvAttribute;
    this.tvCardAttribute = tvCardAttribute;
    this.tvCardColor = tvCardColor;
    this.tvCardCounter = tvCardCounter;
    this.tvCardDesignation = tvCardDesignation;
    this.tvCardEffect = tvCardEffect;
    this.tvCardId = tvCardId;
    this.tvCardLife = tvCardLife;
    this.tvCardName = tvCardName;
    this.tvCardNotes = tvCardNotes;
    this.tvCardPower = tvCardPower;
    this.tvCardQuantity = tvCardQuantity;
    this.tvCardRarity = tvCardRarity;
    this.tvCardSet = tvCardSet;
    this.tvCardTrigger = tvCardTrigger;
    this.tvCardType = tvCardType;
    this.tvColor = tvColor;
    this.tvCounter = tvCounter;
    this.tvDesignation = tvDesignation;
    this.tvEffect = tvEffect;
    this.tvId = tvId;
    this.tvLife = tvLife;
    this.tvName = tvName;
    this.tvNotes = tvNotes;
    this.tvPower = tvPower;
    this.tvQuantity = tvQuantity;
    this.tvRarity = tvRarity;
    this.tvSet = tvSet;
    this.tvTrigger = tvTrigger;
    this.tvType = tvType;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityCardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityCardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_card, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityCardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAddCollector;
      Button btnAddCollector = ViewBindings.findChildViewById(rootView, id);
      if (btnAddCollector == null) {
        break missingId;
      }

      id = R.id.btnAddDeck;
      Button btnAddDeck = ViewBindings.findChildViewById(rootView, id);
      if (btnAddDeck == null) {
        break missingId;
      }

      id = R.id.btnRemoveCollector;
      Button btnRemoveCollector = ViewBindings.findChildViewById(rootView, id);
      if (btnRemoveCollector == null) {
        break missingId;
      }

      id = R.id.btnVolver;
      Button btnVolver = ViewBindings.findChildViewById(rootView, id);
      if (btnVolver == null) {
        break missingId;
      }

      id = R.id.ivCard;
      ImageView ivCard = ViewBindings.findChildViewById(rootView, id);
      if (ivCard == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      id = R.id.tvAttribute;
      TextView tvAttribute = ViewBindings.findChildViewById(rootView, id);
      if (tvAttribute == null) {
        break missingId;
      }

      id = R.id.tvCardAttribute;
      TextView tvCardAttribute = ViewBindings.findChildViewById(rootView, id);
      if (tvCardAttribute == null) {
        break missingId;
      }

      id = R.id.tvCardColor;
      TextView tvCardColor = ViewBindings.findChildViewById(rootView, id);
      if (tvCardColor == null) {
        break missingId;
      }

      id = R.id.tvCardCounter;
      TextView tvCardCounter = ViewBindings.findChildViewById(rootView, id);
      if (tvCardCounter == null) {
        break missingId;
      }

      id = R.id.tvCardDesignation;
      TextView tvCardDesignation = ViewBindings.findChildViewById(rootView, id);
      if (tvCardDesignation == null) {
        break missingId;
      }

      id = R.id.tvCardEffect;
      TextView tvCardEffect = ViewBindings.findChildViewById(rootView, id);
      if (tvCardEffect == null) {
        break missingId;
      }

      id = R.id.tvCardId;
      TextView tvCardId = ViewBindings.findChildViewById(rootView, id);
      if (tvCardId == null) {
        break missingId;
      }

      id = R.id.tvCardLife;
      TextView tvCardLife = ViewBindings.findChildViewById(rootView, id);
      if (tvCardLife == null) {
        break missingId;
      }

      id = R.id.tvCardName;
      TextView tvCardName = ViewBindings.findChildViewById(rootView, id);
      if (tvCardName == null) {
        break missingId;
      }

      id = R.id.tvCardNotes;
      TextView tvCardNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvCardNotes == null) {
        break missingId;
      }

      id = R.id.tvCardPower;
      TextView tvCardPower = ViewBindings.findChildViewById(rootView, id);
      if (tvCardPower == null) {
        break missingId;
      }

      id = R.id.tvCardQuantity;
      TextView tvCardQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvCardQuantity == null) {
        break missingId;
      }

      id = R.id.tvCardRarity;
      TextView tvCardRarity = ViewBindings.findChildViewById(rootView, id);
      if (tvCardRarity == null) {
        break missingId;
      }

      id = R.id.tvCardSet;
      TextView tvCardSet = ViewBindings.findChildViewById(rootView, id);
      if (tvCardSet == null) {
        break missingId;
      }

      id = R.id.tvCard_trigger;
      TextView tvCardTrigger = ViewBindings.findChildViewById(rootView, id);
      if (tvCardTrigger == null) {
        break missingId;
      }

      id = R.id.tvCardType;
      TextView tvCardType = ViewBindings.findChildViewById(rootView, id);
      if (tvCardType == null) {
        break missingId;
      }

      id = R.id.tvColor;
      TextView tvColor = ViewBindings.findChildViewById(rootView, id);
      if (tvColor == null) {
        break missingId;
      }

      id = R.id.tvCounter;
      TextView tvCounter = ViewBindings.findChildViewById(rootView, id);
      if (tvCounter == null) {
        break missingId;
      }

      id = R.id.tvDesignation;
      TextView tvDesignation = ViewBindings.findChildViewById(rootView, id);
      if (tvDesignation == null) {
        break missingId;
      }

      id = R.id.tvEffect;
      TextView tvEffect = ViewBindings.findChildViewById(rootView, id);
      if (tvEffect == null) {
        break missingId;
      }

      id = R.id.tvId;
      TextView tvId = ViewBindings.findChildViewById(rootView, id);
      if (tvId == null) {
        break missingId;
      }

      id = R.id.tvLife;
      TextView tvLife = ViewBindings.findChildViewById(rootView, id);
      if (tvLife == null) {
        break missingId;
      }

      id = R.id.tvName;
      TextView tvName = ViewBindings.findChildViewById(rootView, id);
      if (tvName == null) {
        break missingId;
      }

      id = R.id.tvNotes;
      TextView tvNotes = ViewBindings.findChildViewById(rootView, id);
      if (tvNotes == null) {
        break missingId;
      }

      id = R.id.tvPower;
      TextView tvPower = ViewBindings.findChildViewById(rootView, id);
      if (tvPower == null) {
        break missingId;
      }

      id = R.id.tvQuantity;
      TextView tvQuantity = ViewBindings.findChildViewById(rootView, id);
      if (tvQuantity == null) {
        break missingId;
      }

      id = R.id.tvRarity;
      TextView tvRarity = ViewBindings.findChildViewById(rootView, id);
      if (tvRarity == null) {
        break missingId;
      }

      id = R.id.tvSet;
      TextView tvSet = ViewBindings.findChildViewById(rootView, id);
      if (tvSet == null) {
        break missingId;
      }

      id = R.id.tv_trigger;
      TextView tvTrigger = ViewBindings.findChildViewById(rootView, id);
      if (tvTrigger == null) {
        break missingId;
      }

      id = R.id.tvType;
      TextView tvType = ViewBindings.findChildViewById(rootView, id);
      if (tvType == null) {
        break missingId;
      }

      return new ActivityCardBinding((LinearLayout) rootView, btnAddCollector, btnAddDeck,
          btnRemoveCollector, btnVolver, ivCard, main, tvAttribute, tvCardAttribute, tvCardColor,
          tvCardCounter, tvCardDesignation, tvCardEffect, tvCardId, tvCardLife, tvCardName,
          tvCardNotes, tvCardPower, tvCardQuantity, tvCardRarity, tvCardSet, tvCardTrigger,
          tvCardType, tvColor, tvCounter, tvDesignation, tvEffect, tvId, tvLife, tvName, tvNotes,
          tvPower, tvQuantity, tvRarity, tvSet, tvTrigger, tvType);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
